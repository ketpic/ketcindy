//help:Addax*(decide axis are drawn or not.);
//help:Addpackage*(add packages of \TeX to the main file  for previewing.);
//help:Anglemark*(draw an angle mark.);
//help:Animationparam*(Get parmeter value of animation);
//help:Arrowdata*(draw an arrow line between two points.);
//help:Arrowhead*(draw an arrowhead with specified direction at a designated point.);
//help:Asin*(return arcsine and arccosine.);
//help:Asirfun*(execute Risa/Asir's function.);
//help:Assign*(replace the string1 in the string0 with the string2.);
//help:Assign*(replace the string1 in the string0 with the string2.);
//help:BBdata*(return the size of an image file.);
//help:Bezier*(draw a  Bezier curve.);
//help:Bezier3d*(draw a Cubic BÃ©zier curve.);
//help:Beziersmooth*(draw a smooth Bezier curve.);
//help:Beziersym*(draw a smooth Bezier curve.);
//help:Bowdata*(draw the shape of bow connecting two points.);
//help:Boxplot*(draw boxplots.);
//help:Bspline*(draw second degree B-spline curve.);
//help:CRspline*(draw single Catmull-Rom spline curve.);
//help:CalcbyA*(execute Risa/Asir's script.);
//help:CalcbyM*(execute Maxima's script.);
//help:CalcbyR*(executes R commands and returns the execution result to Cinderella.);
//help:CalcbyW*(execute scripts of Wolfram language(Wl).);
//help:Changestyle*(change the option for drawing.);
//help:Changestyle3d*(change the attribute of PD.);
//help:Changetablestyle*(change line styles of rules.);
//help:Changework*(change the working directory.);
//help:Cindyname*(return the name of a current file.);
//help:Circledata*(draw a circle or polygon.);
//help:Colorcode*(change colorcode from colortype1 to colortype2.);
//help:Concatobj*(concatenates several objects.);
//help:Crossprod*(return the cross product of 2 vectors.);
//help:Crvsfparadata*(remove curves hidden by curved face.);
//help:Datalist2d*(get a list of 2D-plotting data on the screen.);
//help:Datalist3d*(get a list of 3D-plotting data.);
//help:Deffun*(define a function common to both Cindy and R.);
//help:Definecolor*(define the name of colorcode in the \TeX\ figure.);
//help:Defvar*(define variables common to both Cindy and R.);
//help:Deqplot*(draw the solution curve of a differential equation.);
//help:Derivative*(find the derivative of a function or a plotting data.);
//help:Dispmat*(display the list in the console matrix.);
//help:Dist3d*(get the 3D-distance of two points.);
//help:Dotfilldata*(fill a domain with dots.);
//help:Dotprod*(return the dot product of 2 vectors.);
//help:Dqq*(return the string surrounded by double quotes.);
//help:Drawfigures*(manipulate a plural number of PDs together.);
//help:Drawpoint3d*(draw 3D-points.);
//help:Drawppoint*(draw a point.);
//help:Drwxy*(draw axis in the \TeX\ figure.);
//help:Ellipseplot*(draw ellipse.);
//help:Embed*(embed plotting data of 2D in plane of 3D.);
//help:Enclosing*(make a closed curve form the list of plotting data.);
//help:ExeccmdC*(draw 3D-surface.);
//help:Expr*(write an expression in \TeX style.);
//help:Expr3d*(display the string.);
//help:Exprrot*(write a rotated expression in \TeX style.);
//help:Extractdata*(add properties to a data.);
//help:Factorial*(return the factorial.);
//help:Figpdf*(make a pdf file with the same size of figure.);
//help:Findarea*(return the area enclosed with a close curve.);
//help:Findcell*(return the information of a cell.);
//help:Findlength*(return the length of a curve.);
//help:Fontsize*(define the font size in the \TeX\ figure.);
//help:Fourierseries*(draw the graph of a fourier series.);
//help:Fracform*(return TeX-like form of the fraction.);
//help:Framedata*(draw a rectangle.);
//help:Hatchdata*(draw hatch lines in the close curve.);
//help:Help*(display usages of the function.);
//help:Histplot*(create histograms.);
//help:Htickmark*(tick on the horizontal ax.);
//help:Hyperbolaplot*(draw a hyperbola.);
//help:Implicitplot*(draw the graph of a implicit function.);
//help:Indexall*(return all positions of string2 in string1.);
//help:Initglist*(add the list in ketlib slot to that of figures slot.);
//help:Integrate*(find the value of numerical integration.);
//help:Intersectcrvsf*(return a list of intersects of a curve and curved face.);
//help:Intersectcurves*(return a list of intersects of 2 plotting data.);
//help:IntersectcurvesPp*(return a list of intersects with parameters of 2 plotting data.);
//help:IntersectsgpL*(return a intersection of a line segment and plane.);
//help:Inversefun*(find the value of the inversefunction.);
//help:Invert*(rearrange plotting data in the reverse order.);
//help:Invparapt*(return the point on the curve.);
//help:Joincrvs*(create a plotting data of connecting in list of plotting data.);
//help:Ketcindyjsbody*(Add scripts to the first/last of body tag);
//help:Ketcindyjsdata*(Write into csinit);
//help:Ketinit*(initialize \ketcindy.);
//help:Ketinit3d*(declare the use of KeTCindy3D);
//help:Letter*(display the string.);
//help:Letter3d*(display the string.);
//help:Letterrot*(rotate a string and display it.);
//help:Lineplot*(draw the straight line through the two points.);
//help:Listplot*(connect points by line segments.);
//help:Mkbeziercrv*(draw some bezier curves.);
//help:Mkbezierptcrv*(draw a bezier curve.);
//help:Mkbezierptcrv3d*(draw a cubic Bezier curve from nodes.);
//help:Mkcircles*(create plotting data of all geometric circles.);
//help:Mkobjcmd*(obj formatted files of surfaces without thickness.);
//help:Mkobjcrvcmd*(obj formatted files of spatial curves.);
//help:Mkobjnrm*(calculate normal vector of surface.);
//help:Mkobjplatecmd*(obj formatted files of plates.);
//help:Mkobjpolycmd*(obj formatted files of polyhedra.);
//help:Mkobjsymbcmd*(generate commands for obj formatted files of some characters.);
//help:Mkobjthickcmd*(generate commands for obj formatted files of surfaces with thickness.);
//help:Mksegments*(create plotting data of all geometric segments.);
//help:Mkviewobj*(generate obj formatted files.);
//help:Movetojs*(Set position and fontsize of text box in HTML);
//help:Mxbatch*(make a command to execute the Maxima file.);
//help:Mxfun*(execute Maxima's function.);
//help:Mxtex*(convert expression to TeX format.);
//help:Nearestpt*(return the nearest point with the parameter and the distance.);
//help:Nearestptcrv*(return the nearest point on the plotting data from the point1.);
//help:Nohiddenbyfaces*(draw hidden lines by the surfaces.);
//help:Norm*(return the norm of a vector.);
//help:Numptcrv*(return the number of plotting data.);
//help:Op*(return the n-th element of a list or a string.);
//help:Ospline*(draw a spline curve of Oshima.);
//help:Ovaldata*(draw a rectangle with rounded corners.);
//help:Parabolaplot*(draws a parabola.);
//help:Paramark*(draw an angle mark with a parallelogram.);
//help:Paramoncurve*(return the parameter value of the point on the curve.);
//help:Paramplot*(draw a curve of parametric representation.);
//help:Parapt*(return the 2D-coodinate on the plane.);
//help:Partcrv*(make a piece of curve from the PD.);
//help:Partcrv3d*(draw the part curve of the curve PD.);
//help:Periodfun*(draw the graph of a periodic function.);
//help:Perpplane*(create a basic vector on a vertical plane);
//help:Perppt*(get the foot of a perpendicular for the plane from the point.);
//help:Phparadata*(draw the polyhedron by performing hidden line processing.);
//help:Plotdata*(draw the graph of function.);
//help:PlotdataR*(draw graph of R's statistical probability function.);
//help:Pointdata*(make a point data.);
//help:Pointdata3d*(generate data of point list.);
//help:Pointoncurve*(point which has the parameter value);
//help:Polarplot*(draw a curve of polar equation.);
//help:Polygonplot*(draw a polygon inscribed inside the circle.);
//help:Projcoordpara*(get the projection coordinate.);
//help:Ptcrv*(Returns n-th point from PD.);
//help:Ptpos*(Return the latest position of geometric point);
//help:Ptselected*(tests whether the point is selected.);
//help:Ptsize*(set the size of points.);
//help:Ptstart, Ptend*(returns start point and end point of PD.);
//help:Putaxes3d*(make the geometric points on the coordinate axis.);
//help:Putcell*(put a string at the cell.);
//help:Putcellexpr*(put a math expression at the cell.);
//help:Putcol*(put strings to a column.);
//help:Putcolexpr*(put math expressions to a column.);
//help:Putintersect*(make a intersection point of two curves.);
//help:PutonCurve*(put a point on the curve.);
//help:PutonCurve3d*(make the geometric point on the 3D-curve.);
//help:PutonLine*(put a point on the line.);
//help:Putonseg*(put a point on the segment.);
//help:Putonseg3d*(make the geometric point on the 3D-segment.);
//help:Putpoint*(put a point.);
//help:Putpoint3d*(draw the geometric point in the space.);
//help:Putrow*(put strings to a row.);
//help:Putrowexpr*(put math expressions to a row.);
//help:ReadOutData*(read external data.);
//help:Readcsv*(read a file in csv format.);
//help:Readlines*(read a text file line by line.);
//help:Readobj*(read in the polyhedron data in the folder name \verb|polyhedrons_obj|);
//help:Reflectdata*(draw a reflective curve.);
//help:Reflectdata3d*(draw the reflection of plotting data.);
//help:Reflectpoint*(return the reflect point.);
//help:Reflectpoint3d*(return the coordinate of the reflect point.);
//help:Reparse*(return the real part afger parsing.);
//help:Rfun*(execute a R command.);
//help:Rotatedata*(rotate plotting data.);
//help:Rotatedata3d*(rotate plotting data around the vector);
//help:Rotatepoint*(rotate a point.);
//help:Rotatepoint3d*(return the coordinate of the rotate point.);
//help:Rulerscale*(put ruler marks.);
//help:Scaledata*(scale plotting data.);
//help:Scaledata3d*(scale plotting data);
//help:Scalepoint*(scale a point.);
//help:Scalepoint3d*(execute scale transformation for the coordinate of the point.);
//help:Segmark*(add a mark to a segment.);
//help:Setarrow*(set styles of arrows.);
//help:Setarrow*(set the style of arrow.);
//help:Setax*(set the style of axis.);
//help:Setcolor*(set the color of figures and characters in the \TeX\ figure.);
//help:Seteditable*(Set Editable Text);
//help:Setfiles*(set the name of texfile.);
//help:Setketcindyjs*(Set options of KeTCindyJS);
//help:Setmarklen*(set the length of tickmarks on the axsis.);
//help:Setorigin*(set or transtate the coordinate of apparent origin.);
//help:Setpara*(set up the animation control system.);
//help:Setparent*(set the name of texfile by using the Parent push button.);
//help:Setpen*(set the thickness of lines.);
//help:Setplaybuttons*(Set position of play buttons in HTML);
//help:Setpt*(set the size of points.);
//help:Setscaling*(set the scale of vertical direction.);
//help:Setslidebody*(set up the color and density of the letters in slide body.);
//help:Setslidehyper*(use \verb|hyperref.sty|.);
//help:Setslidemain*(set up the main slide.);
//help:Setslidemargin*(change the margin of slides.);
//help:Setslidepage*(set up each page of slides.);
//help:Settitle*(make a title slide.);
//help:Setunitlen*(set the scale of unit length. (default is 1cm));
//help:Setwindow*(set a drawing area on a Euclidean view.);
//help:Sf3data*(draw the wire frame model of the surface.);
//help:Sfbdparadata*(draw the surface by performing hidden line processing.);
//help:Sfcutparadatacdy*(Display intersection line of surface and surface.);
//help:Shade*(fill a domain surrounded by a closed curve.);
//help:Skeletonparadata*(draw the lines by performing hidden line processing.);
//help:Slider*(make a slider on a Euclidean view.);
//help:Spacecurve*(draw the space curve.);
//help:Spaceline*(draw the space polygonal lines.);
//help:Sprintf*(converts a real number to a string.);
//help:Sqr*(return square root.);
//help:Start3d*(creates subarea, and recognize 3D points.);
//help:Startsurf*(defines values related to surface rendering.);
//help:Strsplit*(return the list of strings separated by a string.);
//help:Tab2list*(convert contents of string data to list.);
//help:Tabledata*(draw rules of a table.);
//help:Tangentplot*(draw a tangent line of a plotting data.);
//help:Texcom*(add the command in the \TeX file.);
//help:Textedit*(Get string from input box of KeTCindyJS);
//help:Textformat*(converts a real number to a string.);
//help:Tgrid*(return the coordinates of the grid name.);
//help:Tlistplot*(connect two lattice points by line segments.);
//help:Tocindyform*(return Cindy form.);
//help:Tonormalform*(return TeX form with \verb|*|.);
//help:Totexform*(return TeX form.);
//help:Toupper*(return the upper case letters of a string.);
//help:Transelatepoint*(translate a point.);
//help:Translatedata*(translate plotting data.);
//help:Translatedata3d*(translate plotting data);
//help:Translatepoint3d*(return the translated coordinate for the point.);
//help:Usegraphics*(change to pict2e.);
//help:Vertexedgeface*(draw the polyhedron.);
//help:Vtickmark*(tick on the vertical ax.);
//help:Windispg*(display all graphs on Euclidean view.);
//help:Wireparadata*(draw the surface by wire frame data with performing hidden line processing.);
//help:Wlfun*(execute a function of Wl.);
//help:Wltex*(convert expression to LaTeX format.);
//help:WriteOutData*(write out data in \ketcindy\ format.);
//help:Writecsv*(make a CSV file consisting of the contents of data.);
//help:Xyzax3data*(draw the coordinate axis.);
//help:Xyzcoord*(return the 3D-coordinate of the point P.);
